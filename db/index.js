var U=Object.create;var g=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var z=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty;var N=(t,a)=>{for(var e in a)g(t,e,{get:a[e],enumerable:!0})},w=(t,a,e,s)=>{if(a&&typeof a=="object"||typeof a=="function")for(let c of z(a))!J.call(t,c)&&c!==e&&g(t,c,{get:()=>a[c],enumerable:!(s=d(a,c))||s.enumerable});return t};var B=(t,a,e)=>(e=t!=null?U(E(t)):{},w(a||!t||!t.__esModule?g(e,"default",{value:t,enumerable:!0}):e,t)),R=t=>w(g({},"__esModule",{value:!0}),t);var b=(t,a,e)=>new Promise((s,c)=>{var y=r=>{try{u(e.next(r))}catch(m){c(m)}},l=r=>{try{u(e.throw(r))}catch(m){c(m)}},u=r=>r.done?s(r.value):Promise.resolve(r.value).then(y,l);u((e=e.apply(t,a)).next())});var k={};N(k,{batchSetAsync:()=>x,batchUpdateAsync:()=>O});module.exports=R(k);var S=B(require("lodash/chunk")),f=B(require("lodash/isFunction")),i=require("../json");const x=r=>b(void 0,[r],function*({db:t,values:a,collectionPath:e,idField:s,setObject:c,setOptions:y={merge:!0},size:l=500,log:u=!0}){const m=(0,S.default)(a,l).map(v=>b(void 0,null,function*(){return new Promise((A,p)=>{const o=t.batch();v.forEach(n=>{let h;(0,f.default)(c)&&(h=c(n)),h||(h=n);const P=(0,f.default)(s)?s(n):n[s],j=t.collection(e).doc(P);u&&(0,i.logJSON)("-- set -- ",j.path,h),o.set(j,(0,i.toJSON)(h),y)}),o.commit().then(n=>{u&&(0,i.logJSON)("-- set success --"),A(n)}).catch(n=>{p(n)})})}));return yield Promise.all(m)}),O=u=>b(void 0,[u],function*({db:t,values:a,collectionPath:e,idField:s,updateObject:c,size:y=500,log:l=!0}){const r=(0,S.default)(a,y).map(m=>b(void 0,null,function*(){return new Promise((v,A)=>{const p=t.batch();m.forEach(o=>{let n;(0,f.default)(c)&&(n=c(o)),n||(n=o);const h=(0,f.default)(s)?s(o):o[s],P=t.collection(e).doc(h);l&&(0,i.logJSON)("-- update -- ",P.path,n),p.update(P,(0,i.toJSON)(n))}),p.commit().then(o=>{l&&(0,i.logJSON)("-- update success --"),v(o)}).catch(o=>{A(o)})})}));return yield Promise.all(r)});0&&(module.exports={batchSetAsync,batchUpdateAsync});
